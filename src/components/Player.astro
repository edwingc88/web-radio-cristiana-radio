---
import { Icon } from 'astro-icon/components';
const { label } = Astro.props;
---

    <h2 class="flex  justify-center text-sm  text-yellow-300 lg:text-lg font-semibold ">{label}<Icon name="live" class="lg:text-2xl  ml-0.5 mt-0.5" /></h2>
    
    <button id="toggle-button" class="w-11 h-11 lg:w-16 lg:h-16 rounded-full bg-white hover:bg-yellow-200 flex items-center justify-center transition hover:cursor-pointer">
      <div id="icon-toggle" class="w-10 h-10 lg:w-16 lg:h-16 lg:p-2  p-1 text-gray-900">
        <!-- SVG Play por defecto -->
        <svg viewBox="0 0 24 24" fill="currentColor">
          <path d="M8 5v14l11-7z" />
        </svg>
      </div>
    </button>

    <div class="flex flex-row lg:flex-col   lg:gap-x-0 gap-x-1 items-center lg:ml-6">
      <label for="volume-control" class="text-white lg:text-base font-medium mb-1 lg:block hidden  ">Volumen</label>
      <input type="range" id="volume-control" min="0" max="1" step="0.01" value="0.7" class="lg:w-32 w-26 cursor-pointer accent-yellow-400">
    </div>


  <audio id="radio-stream" src="https://s2.radio.co/sb8a87a94f/listen" preload="none"></audio>

<script>

  document.addEventListener('DOMContentLoaded', () => {
    const $button = document.getElementById('toggle-button');
    const $icon = document.getElementById('icon-toggle');
    const audio = document.getElementById('radio-stream');
    const $volumeControl = document.getElementById('volume-control') as HTMLInputElement;


    if (!$button || !$icon ||  !$volumeControl  || !(audio instanceof HTMLAudioElement)) {
      console.error("Uno de los elementos no se encontró o no es válido.");
      return;
    }
    audio.volume = parseFloat($volumeControl.value); // volumen inicial
    let isPlaying = false;
      
    const playSVG = `
      <svg viewBox="0 0 24 24" fill="currentColor">
        <path d="M8 5v14l11-7z" />
      </svg>`;
    const pauseSVG = `
      <svg viewBox="0 0 24 24" fill="currentColor">
        <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z" />
      </svg>`;

    $button.addEventListener('click', () => {
      if (!isPlaying) {
        audio.play();
        $icon.innerHTML = pauseSVG;
      } else {
        audio.pause();
        $icon.innerHTML = playSVG;
      }
      isPlaying = !isPlaying;
    });

    $volumeControl.addEventListener('input', (e) => {
        const target = e.target as HTMLInputElement;
        audio.volume = parseFloat(target.value);
    });

  });

</script>
